#!/usr/bin/python3
# Problem 2
# ---------
# Even Fibonacci numbers
# ====================
# Each new term in the Fibonacci sequence is generated by adding the
#  previous two terms. By starting with 1 and 2, the first 10 terms
#  will be:
#     `1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...`
#
# By considering the terms in the Fibonacci sequence whose values do
# not exceed four million, find the sum of the even-valued terms.
#

from itertools import count

def fib(n):
    if n in [0, 1]:
        return n
    return fib(n - 1) + fib(n - 2)

def main():
    rsum = 0
    for i in count(0):
        fibn = fib(i)
        if fibn > 4000000:
            break
        elif fibn % 2 == 0:
            rsum += fibn
    return rsum

if __name__ == '__main__':
    print(main())
